{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/BlogBio.js","webpack:///./src/templates/blog-post.js"],"names":["Layout","children","className","style","position","bottom","left","Date","getFullYear","BlogBio","data","useStaticQuery","author","site","siteMetadata","avatar","social","childImageSharp","fixed","alt","name","imgStyle","borderRadius","pageQuery","BlogPostTemplate","location","post","markdownRemark","siteTitle","title","previous","next","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","top","dangerouslySetInnerHTML","__html","html","display","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel"],"mappings":"4FAAA,qCAoBeA,IAjBA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEhB,OACE,6BACE,kBAAC,IAAD,MACA,yBAAKC,UAAU,kBACb,8BAAOD,GACP,4BAAQE,MAAO,CAAEC,SAAU,WACTC,OAAO,EACPC,KAAK,QAFvB,mBAGkB,IAAIC,MAAOC,mB,6ICkDtBC,EApDC,WAAO,IAAD,QACdC,EAAOC,yBAAe,cAwBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OAEjCG,GADM,UAAGL,EAAKG,KAAKC,oBAAb,OAAG,EAAwBE,OACxBN,SAAH,UAAGA,EAAMK,cAAT,iBAAG,EAAcE,uBAAjB,aAAG,EAA+BC,OAE9C,OACE,yBAAKhB,UAAU,OACZa,GACC,kBAAC,IAAD,CACEG,MAAOH,EACPI,KAAKP,aAAA,EAAAA,EAAQQ,OAAR,GACLlB,UAAU,aACVmB,SAAU,CACRC,aAAa,UAIlBV,aAAA,EAAAA,EAAQQ,OACP,2BACC,gCAASR,EAAOQ,MADjB,8J,wBCeKG,GAFEC,UA3DU,SAAC,GAAwB,IAAD,EAArBd,EAAqB,EAArBA,KAAMe,EAAe,EAAfA,SAC1BC,EAAOhB,EAAKiB,eACZC,GAAY,UAAAlB,EAAKG,KAAKC,oBAAV,eAAwBe,QAAxB,QACVC,EAAmBpB,EAAnBoB,SAAUC,EAASrB,EAATqB,KAElB,OACE,kBAAC,IAAD,CAAQN,SAAUA,EAAUI,MAAOD,GACjC,kBAAC,IAAD,CACEC,MAAOH,EAAKM,YAAYH,MACxBI,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,UAEpD,6BACEhC,UAAU,YACViC,WAAS,EACTC,SAAS,6BAET,gCACE,wBAAIC,SAAS,YAAYX,EAAKM,YAAYH,OAC1C,2BAAIH,EAAKM,YAAYM,OAEvB,kBAAC,EAAD,MACE,wBAAInC,MAAO,CACLC,SAAU,WACVmC,IAAK,WACb,6BACEC,wBAAyB,CAAEC,OAAQf,EAAKgB,MACxCL,SAAS,iBAGb,yBAAKnC,UAAU,iBACb,wBACEC,MAAO,CACLwC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGjB,GACC,kBAAC,OAAD,CAAMkB,GAAIlB,EAASmB,OAAOC,KAAMC,IAAI,QAApC,KACKrB,EAASE,YAAYH,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAMiB,GAAIjB,EAAKkB,OAAOC,KAAMC,IAAI,QAC7BpB,EAAKC,YAAYH,MADpB,WAaQ","file":"component---src-templates-blog-post-js-bdd51488f248ba5de8bd.js","sourcesContent":["import React from \"react\"\r\nimport Header from './Header'\r\n\r\nconst Layout = ({ children }) => {\r\n\r\n  return (\r\n    <div>\r\n      <Header/>\r\n      <div className=\"global-wrapper\">\r\n        <main>{children}</main>\r\n        <footer style={{ position: \"absolute\",\r\n                          bottom:0,\r\n                          left:\"50%\"}}>\r\n          Made with üíñ | {new Date().getFullYear()}\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Image from \"gatsby-image\"\r\n\r\nconst BlogBio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\r\n        childImageSharp {\r\n          fixed(height: 50, width: 50, quality: 95) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n  const social = data.site.siteMetadata?.social\r\n  const avatar = data?.avatar?.childImageSharp?.fixed\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      {avatar && (\r\n        <Image\r\n          fixed={avatar}\r\n          alt={author?.name || ``}\r\n          className=\"bio-avatar\"\r\n          imgStyle={{\r\n            borderRadius: `50%`,\r\n          }}\r\n        />\r\n      )}\r\n      {author?.name && (\r\n        <p>\r\n         <strong>{author.name}</strong> | Math/CS @Brown University \r\n         | SWE Intern @Stripe, Google, FB | All opinions are my own and not attached to\r\n         any school or company I'm associated with :)\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogBio\r\n","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport BlogBio from \"../components/BlogBio\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst BlogPostTemplate = ({ data, location }) => {\r\n  const post = data.markdownRemark\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const { previous, next } = data\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO\r\n        title={post.frontmatter.title}\r\n        description={post.frontmatter.description || post.excerpt}\r\n      />\r\n      <article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <header>\r\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\r\n          <p>{post.frontmatter.date}</p>\r\n        </header>\r\n        <BlogBio/>\r\n          <hr style={{\r\n                position: \"relative\",\r\n                top: \"-15px\"}}/>\r\n        <section\r\n          dangerouslySetInnerHTML={{ __html: post.html }}\r\n          itemProp=\"articleBody\"\r\n        />\r\n      </article>\r\n      <nav className=\"blog-post-nav\">\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                ‚Üê {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} ‚Üí\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(id: { eq: $id }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}