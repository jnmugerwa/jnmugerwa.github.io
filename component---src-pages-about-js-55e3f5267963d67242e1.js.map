{"version":3,"sources":["webpack:///./src/components/Bio.js","webpack:///./src/pages/about.js","webpack:///./src/components/SEO.js"],"names":["Bio","data","useStaticQuery","author","site","siteMetadata","avatar","social","childImageSharp","fixed","className","alt","name","imgStyle","borderRadius","Paper","elevation","style","padding","height","marginRight","summary","AboutPage","Header","SEO","title","position","bottom","left","Date","getFullYear","description","lang","meta","metaDescription","defaultTitle","htmlAttributes","titleTemplate","content","property","twitter","concat","defaultProps"],"mappings":"sLAuDeA,EAlDH,WAAO,IAAD,QACVC,EAAOC,yBAAe,cAwBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OAEjCG,GADM,UAAGL,EAAKG,KAAKC,oBAAb,OAAG,EAAwBE,OACxBN,SAAH,UAAGA,EAAMK,cAAT,iBAAG,EAAcE,uBAAjB,aAAG,EAA+BC,OAE9C,OACE,yBAAKC,UAAU,OACZJ,GACC,kBAAC,IAAD,CACEG,MAAOH,EACPK,KAAKR,aAAA,EAAAA,EAAQS,OAAR,GACLF,UAAU,aACVG,SAAU,CACRC,aAAa,UAIlBX,aAAA,EAAAA,EAAQS,OACP,kBAACG,EAAA,EAAD,CAAOC,UAAU,IAAIC,MAAO,CAACC,QAAQ,OAAQC,OAAO,cAAeC,YAAY,SAC7E,sDAA4BjB,EAAOS,KAAnC,SAA8CT,aAAA,EAAAA,EAAQkB,UAAW,KAAjE,Q,YC5BKC,UAff,WACE,OACE,6BACE,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAKC,MAAM,UACX,kBAAC,EAAD,MACA,4BAAQR,MAAO,CAAES,SAAU,QACPC,OAAO,EACPC,KAAK,QAFzB,mBAGoB,IAAIC,MAAOC,kB,kCCdrC,iDAYMN,EAAM,SAAC,GAAwC,IAAD,MAArCO,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMR,EAAY,EAAZA,MAC9BrB,EAASF,yBAAe,cAAxBE,KAgBF8B,EAAkBH,GAAe3B,EAAKC,aAAa0B,YACnDI,EAAY,UAAG/B,EAAKC,oBAAR,aAAG,EAAmBoB,MAExC,OACE,kBAAC,SAAD,CACEW,eAAgB,CACdJ,QAEFP,MAAOA,EACPY,cAAeF,EAAY,QAAWA,EAAiB,KACvDF,KAAM,CACJ,CACErB,KAAK,cACL0B,QAASJ,GAEX,CACEK,SAAS,WACTD,QAASb,GAEX,CACEc,SAAS,iBACTD,QAASJ,GAEX,CACEK,SAAS,UACTD,QAAQ,WAEV,CACE1B,KAAK,eACL0B,QAAQ,WAEV,CACE1B,KAAK,kBACL0B,SAAS,UAAAlC,EAAKC,oBAAL,mBAAmBE,cAAnB,eAA2BiC,UAA3B,IAEX,CACE5B,KAAK,gBACL0B,QAASb,GAEX,CACEb,KAAK,sBACL0B,QAASJ,IAEXO,OAAOR,MAKfT,EAAIkB,aAAe,CACjBV,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCP","file":"component---src-pages-about-js-55e3f5267963d67242e1.js","sourcesContent":["import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Image from \"gatsby-image\"\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\r\n        childImageSharp {\r\n          fixed(quality: 95) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n  const social = data.site.siteMetadata?.social\r\n  const avatar = data?.avatar?.childImageSharp?.fixed\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      {avatar && (\r\n        <Image\r\n          fixed={avatar}\r\n          alt={author?.name || ``}\r\n          className=\"bio-avatar\"\r\n          imgStyle={{\r\n            borderRadius: `50%`,\r\n          }}\r\n        />\r\n      )}\r\n      {author?.name && (\r\n        <Paper elevation=\"5\" style={{padding:\"10px\", height:\"fit-content\", marginRight:\"18px\"}}>\r\n          <p> What's good? My name's {author.name} and {author?.summary || null} </p>\r\n        </Paper> \r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import React from 'react';\r\nimport Header from '../components/Header';\r\nimport Bio from '../components/Bio';\r\nimport SEO from \"../components/SEO\"\r\n\r\nfunction AboutPage() {\r\n  return (\r\n    <div>\r\n      <Header/>\r\n      <SEO title=\"About\"/>\r\n      <Bio/>\r\n      <footer style={{ position: \"fixed\",\r\n                          bottom:0,\r\n                          left:\"50%\"}}>\r\n          Made with ðŸ’– | {new Date().getFullYear()}\r\n        </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AboutPage\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst SEO = ({ description, lang, meta, title }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata?.social?.twitter || ``,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}